=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ProjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ProjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectsApi' do
    it 'should create an instance of ProjectsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ProjectsApi)
    end
  end

  # unit tests for projects_add_collaborator
  # Add project collaborator
  # Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project &#x60;admin&#x60; to add a collaborator.
  # @param project_id The unique identifier of the project.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectsAddCollaboratorRequest] :projects_add_collaborator_request 
  # @return [nil]
  describe 'projects_add_collaborator test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_create_card
  # Create a project card
  # 
  # @param column_id The unique identifier of the column.
  # @param projects_create_card_request 
  # @param [Hash] opts the optional parameters
  # @return [ProjectCard]
  describe 'projects_create_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_create_column
  # Create a project column
  # 
  # @param project_id The unique identifier of the project.
  # @param projects_update_column_request 
  # @param [Hash] opts the optional parameters
  # @return [ProjectColumn]
  describe 'projects_create_column test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_create_for_authenticated_user
  # Create a user project
  # Creates a user project board. Returns a &#x60;410 Gone&#x60; status if the user does not have existing classic projects. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param projects_create_for_authenticated_user_request 
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'projects_create_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_create_for_org
  # Create an organization project
  # Creates an organization project board. Returns a &#x60;410 Gone&#x60; status if projects are disabled in the organization or if the organization does not have existing classic projects. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param org The organization name. The name is not case sensitive.
  # @param projects_create_for_org_request 
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'projects_create_for_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_create_for_repo
  # Create a repository project
  # Creates a repository project board. Returns a &#x60;410 Gone&#x60; status if projects are disabled in the repository or if the repository does not have existing classic projects. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param projects_create_for_org_request 
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'projects_create_for_repo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_delete
  # Delete a project
  # Deletes a project board. Returns a &#x60;404 Not Found&#x60; status if projects are disabled.
  # @param project_id The unique identifier of the project.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'projects_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_delete_card
  # Delete a project card
  # 
  # @param card_id The unique identifier of the card.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'projects_delete_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_delete_column
  # Delete a project column
  # 
  # @param column_id The unique identifier of the column.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'projects_delete_column test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_get
  # Get a project
  # Gets a project by its &#x60;id&#x60;. Returns a &#x60;404 Not Found&#x60; status if projects are disabled. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param project_id The unique identifier of the project.
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'projects_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_get_card
  # Get a project card
  # 
  # @param card_id The unique identifier of the card.
  # @param [Hash] opts the optional parameters
  # @return [ProjectCard]
  describe 'projects_get_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_get_column
  # Get a project column
  # 
  # @param column_id The unique identifier of the column.
  # @param [Hash] opts the optional parameters
  # @return [ProjectColumn]
  describe 'projects_get_column test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_get_permission_for_user
  # Get project permission for a user
  # Returns the collaborator&#39;s permission level for an organization project. Possible values for the &#x60;permission&#x60; key: &#x60;admin&#x60;, &#x60;write&#x60;, &#x60;read&#x60;, &#x60;none&#x60;. You must be an organization owner or a project &#x60;admin&#x60; to review a user&#39;s permission level.
  # @param project_id The unique identifier of the project.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [ProjectCollaboratorPermission]
  describe 'projects_get_permission_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_cards
  # List project cards
  # 
  # @param column_id The unique identifier of the column.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :archived_state Filters the project cards that are returned by the card&#39;s state.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<ProjectCard>]
  describe 'projects_list_cards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_collaborators
  # List project collaborators
  # Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project &#x60;admin&#x60; to list collaborators.
  # @param project_id The unique identifier of the project.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :affiliation Filters the collaborators by their affiliation. &#x60;outside&#x60; means outside collaborators of a project that are not a member of the project&#39;s organization. &#x60;direct&#x60; means collaborators with permissions to a project, regardless of organization membership status. &#x60;all&#x60; means all collaborators the authenticated user can see.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<SimpleUser1>]
  describe 'projects_list_collaborators test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_columns
  # List project columns
  # 
  # @param project_id The unique identifier of the project.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<ProjectColumn>]
  describe 'projects_list_columns test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_for_org
  # List organization projects
  # Lists the projects in an organization. Returns a &#x60;404 Not Found&#x60; status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Indicates the state of the projects to return. Can be either &#x60;open&#x60;, &#x60;closed&#x60;, or &#x60;all&#x60;.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<Project>]
  describe 'projects_list_for_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_for_repo
  # List repository projects
  # Lists the projects in a repository. Returns a &#x60;404 Not Found&#x60; status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Indicates the state of the projects to return. Can be either &#x60;open&#x60;, &#x60;closed&#x60;, or &#x60;all&#x60;.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<Project>]
  describe 'projects_list_for_repo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_list_for_user
  # List user projects
  # 
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Indicates the state of the projects to return. Can be either &#x60;open&#x60;, &#x60;closed&#x60;, or &#x60;all&#x60;.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [Array<Project>]
  describe 'projects_list_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_move_card
  # Move a project card
  # 
  # @param card_id The unique identifier of the card.
  # @param projects_move_card_request 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'projects_move_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_move_column
  # Move a project column
  # 
  # @param column_id The unique identifier of the column.
  # @param projects_move_column_request 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'projects_move_column test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_remove_collaborator
  # Remove user as a collaborator
  # Removes a collaborator from an organization project. You must be an organization owner or a project &#x60;admin&#x60; to remove a collaborator.
  # @param project_id The unique identifier of the project.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'projects_remove_collaborator test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_update
  # Update a project
  # Updates a project board&#39;s information. Returns a &#x60;404 Not Found&#x60; status if projects are disabled. If you do not have sufficient privileges to perform this action, a &#x60;401 Unauthorized&#x60; or &#x60;410 Gone&#x60; status is returned.
  # @param project_id The unique identifier of the project.
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectsUpdateRequest] :projects_update_request 
  # @return [Project]
  describe 'projects_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_update_card
  # Update an existing project card
  # 
  # @param card_id The unique identifier of the card.
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectsUpdateCardRequest] :projects_update_card_request 
  # @return [ProjectCard]
  describe 'projects_update_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_update_column
  # Update an existing project column
  # 
  # @param column_id The unique identifier of the column.
  # @param projects_update_column_request 
  # @param [Hash] opts the optional parameters
  # @return [ProjectColumn]
  describe 'projects_update_column test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
