=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SecretScanningApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SecretScanningApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SecretScanningApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecretScanningApi' do
    it 'should create an instance of SecretScanningApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SecretScanningApi)
    end
  end

  # unit tests for secret_scanning_get_alert
  # Get a secret scanning alert
  # Gets a single secret scanning alert detected in an eligible repository. To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. For public repositories, you may instead use the &#x60;public_repo&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param alert_number The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the &#x60;number&#x60; field in the response from the &#x60;GET /repos/{owner}/{repo}/code-scanning/alerts&#x60; operation.
  # @param [Hash] opts the optional parameters
  # @return [SecretScanningListAlertsForRepo200ResponseInner]
  describe 'secret_scanning_get_alert test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for secret_scanning_list_alerts_for_enterprise
  # List secret scanning alerts for an enterprise
  # Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest. To use this endpoint, you must be a member of the enterprise, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. Alerts are only returned for organizations in the enterprise for which you are an organization owner or a [security manager](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Set to &#x60;open&#x60; or &#x60;resolved&#x60; to only list secret scanning alerts in a specific state.
  # @option opts [String] :secret_type A comma-separated list of secret types to return. By default all secret types are returned. See \&quot;[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)\&quot; for a complete list of secret types.
  # @option opts [String] :resolution A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are &#x60;false_positive&#x60;, &#x60;wont_fix&#x60;, &#x60;revoked&#x60;, &#x60;pattern_edited&#x60;, &#x60;pattern_deleted&#x60; or &#x60;used_in_tests&#x60;.
  # @option opts [String] :sort The property to sort the results by. &#x60;created&#x60; means when the alert was created. &#x60;updated&#x60; means when the alert was updated or resolved.
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.
  # @return [Array<SecretScanningListAlertsForEnterprise200ResponseInner>]
  describe 'secret_scanning_list_alerts_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for secret_scanning_list_alerts_for_org
  # List secret scanning alerts for an organization
  # Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest. To use this endpoint, you must be an administrator or security manager for the organization, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. For public repositories, you may instead use the &#x60;public_repo&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Set to &#x60;open&#x60; or &#x60;resolved&#x60; to only list secret scanning alerts in a specific state.
  # @option opts [String] :secret_type A comma-separated list of secret types to return. By default all secret types are returned. See \&quot;[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)\&quot; for a complete list of secret types.
  # @option opts [String] :resolution A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are &#x60;false_positive&#x60;, &#x60;wont_fix&#x60;, &#x60;revoked&#x60;, &#x60;pattern_edited&#x60;, &#x60;pattern_deleted&#x60; or &#x60;used_in_tests&#x60;.
  # @option opts [String] :sort The property to sort the results by. &#x60;created&#x60; means when the alert was created. &#x60;updated&#x60; means when the alert was updated or resolved.
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Integer] :page Page number of the results to fetch.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor. To receive an initial cursor on your first request, include an empty \&quot;before\&quot; query string.
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.  To receive an initial cursor on your first request, include an empty \&quot;after\&quot; query string.
  # @return [Array<SecretScanningListAlertsForEnterprise200ResponseInner>]
  describe 'secret_scanning_list_alerts_for_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for secret_scanning_list_alerts_for_repo
  # List secret scanning alerts for a repository
  # Lists secret scanning alerts for an eligible repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. For public repositories, you may instead use the &#x60;public_repo&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Set to &#x60;open&#x60; or &#x60;resolved&#x60; to only list secret scanning alerts in a specific state.
  # @option opts [String] :secret_type A comma-separated list of secret types to return. By default all secret types are returned. See \&quot;[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)\&quot; for a complete list of secret types.
  # @option opts [String] :resolution A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are &#x60;false_positive&#x60;, &#x60;wont_fix&#x60;, &#x60;revoked&#x60;, &#x60;pattern_edited&#x60;, &#x60;pattern_deleted&#x60; or &#x60;used_in_tests&#x60;.
  # @option opts [String] :sort The property to sort the results by. &#x60;created&#x60; means when the alert was created. &#x60;updated&#x60; means when the alert was updated or resolved.
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Integer] :page Page number of the results to fetch.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor. To receive an initial cursor on your first request, include an empty \&quot;before\&quot; query string.
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.  To receive an initial cursor on your first request, include an empty \&quot;after\&quot; query string.
  # @return [Array<SecretScanningListAlertsForRepo200ResponseInner>]
  describe 'secret_scanning_list_alerts_for_repo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for secret_scanning_list_locations_for_alert
  # List locations for a secret scanning alert
  # Lists all locations for a given secret scanning alert for an eligible repository. To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. For public repositories, you may instead use the &#x60;public_repo&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param alert_number The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the &#x60;number&#x60; field in the response from the &#x60;GET /repos/{owner}/{repo}/code-scanning/alerts&#x60; operation.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number of the results to fetch.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @return [Array<SecretScanningListLocationsForAlert200ResponseInner>]
  describe 'secret_scanning_list_locations_for_alert test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for secret_scanning_update_alert
  # Update a secret scanning alert
  # Updates the status of a secret scanning alert in an eligible repository. To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope. For public repositories, you may instead use the &#x60;public_repo&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; write permission to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository. The name is not case sensitive.
  # @param alert_number The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the &#x60;number&#x60; field in the response from the &#x60;GET /repos/{owner}/{repo}/code-scanning/alerts&#x60; operation.
  # @param secret_scanning_update_alert_request 
  # @param [Hash] opts the optional parameters
  # @return [SecretScanningListAlertsForRepo200ResponseInner]
  describe 'secret_scanning_update_alert test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
