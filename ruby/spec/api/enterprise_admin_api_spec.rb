=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::EnterpriseAdminApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EnterpriseAdminApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::EnterpriseAdminApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EnterpriseAdminApi' do
    it 'should create an instance of EnterpriseAdminApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::EnterpriseAdminApi)
    end
  end

  # unit tests for enterprise_admin_add_custom_labels_to_self_hosted_runner_for_enterprise
  # Add custom labels to a self-hosted runner for an enterprise
  # Add custom labels to a self-hosted runner configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param enterprise_admin_add_custom_labels_to_self_hosted_runner_for_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200Response]
  describe 'enterprise_admin_add_custom_labels_to_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_add_org_access_to_self_hosted_runner_group_in_enterprise
  # Add organization access to a self-hosted runner group in an enterprise
  # Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have &#x60;visibility&#x60; set to &#x60;selected&#x60;. For more information, see \&quot;[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param org_id The unique identifier of the organization.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_add_org_access_to_self_hosted_runner_group_in_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_add_self_hosted_runner_to_group_for_enterprise
  # Add a self-hosted runner to a group for an enterprise
  # Adds a self-hosted runner to a runner group configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_add_self_hosted_runner_to_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_create_registration_token_for_enterprise
  # Create a registration token for an enterprise
  # Returns a token that you can pass to the &#x60;config&#x60; script. The token expires after one hour.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.  #### Example using registration token  Configure your self-hosted runner, replacing &#x60;TOKEN&#x60; with the registration token provided by this endpoint.  &#x60;&#x60;&#x60; ./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN &#x60;&#x60;&#x60;
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @return [AuthenticationToken]
  describe 'enterprise_admin_create_registration_token_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_create_remove_token_for_enterprise
  # Create a remove token for an enterprise
  # Returns a token that you can pass to the &#x60;config&#x60; script to remove a self-hosted runner from an enterprise. The token expires after one hour.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.  #### Example using remove token  To remove your self-hosted runner from an enterprise, replace &#x60;TOKEN&#x60; with the remove token provided by this endpoint.  &#x60;&#x60;&#x60; ./config.sh remove --token TOKEN &#x60;&#x60;&#x60;
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @return [AuthenticationToken]
  describe 'enterprise_admin_create_remove_token_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_create_self_hosted_runner_group_for_enterprise
  # Create a self-hosted runner group for an enterprise
  # Creates a new self-hosted runner group for an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_create_self_hosted_runner_group_for_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ResponseRunnerGroupsInner]
  describe 'enterprise_admin_create_self_hosted_runner_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_delete_scim_group_from_enterprise
  # Delete a SCIM group from an enterprise
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_group_id Identifier generated by the GitHub SCIM endpoint.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_delete_scim_group_from_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_delete_self_hosted_runner_from_enterprise
  # Delete a self-hosted runner from an enterprise
  # Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_delete_self_hosted_runner_from_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_delete_self_hosted_runner_group_from_enterprise
  # Delete a self-hosted runner group from an enterprise
  # Deletes a self-hosted runner group for an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_delete_self_hosted_runner_group_from_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_delete_user_from_enterprise
  # Delete a SCIM user from an enterprise
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_user_id The unique identifier of the SCIM user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_delete_user_from_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_disable_selected_organization_github_actions_enterprise
  # Disable a selected organization for GitHub Actions in an enterprise
  # Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;enabled_organizations&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param org_id The unique identifier of the organization.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_disable_selected_organization_github_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_enable_selected_organization_github_actions_enterprise
  # Enable a selected organization for GitHub Actions in an enterprise
  # Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;enabled_organizations&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param org_id The unique identifier of the organization.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_enable_selected_organization_github_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_allowed_actions_enterprise
  # Get allowed actions and reusable workflows for an enterprise
  # Gets the selected actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;allowed_actions&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminGetAllowedActionsEnterprise200Response]
  describe 'enterprise_admin_get_allowed_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_audit_log
  # Get the audit log for an enterprise
  # Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the &#x60;admin:enterprise&#x60; scope.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :phrase A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).
  # @option opts [String] :include The event types to include:  - &#x60;web&#x60; - returns web (non-Git) events. - &#x60;git&#x60; - returns Git events. - &#x60;all&#x60; - returns both web and Git events.  The default is &#x60;web&#x60;.
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.
  # @option opts [String] :order The order of audit log events. To list newest events first, specify &#x60;desc&#x60;. To list oldest events first, specify &#x60;asc&#x60;.  The default is &#x60;desc&#x60;.
  # @option opts [Integer] :page Page number of the results to fetch.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @return [Array<EnterpriseAdminGetAuditLog200ResponseInner>]
  describe 'enterprise_admin_get_audit_log test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_github_actions_permissions_enterprise
  # Get GitHub Actions permissions for an enterprise
  # Gets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminGetGithubActionsPermissionsEnterprise200Response]
  describe 'enterprise_admin_get_github_actions_permissions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_provisioning_information_for_enterprise_group
  # Get SCIM provisioning information for an enterprise group
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_group_id Identifier generated by the GitHub SCIM endpoint.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :excluded_attributes Attributes to exclude.
  # @return [EnterpriseAdminListProvisionedGroupsEnterprise200ResponseResourcesInner]
  describe 'enterprise_admin_get_provisioning_information_for_enterprise_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_provisioning_information_for_enterprise_user
  # Get SCIM provisioning information for an enterprise user
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_user_id The unique identifier of the SCIM user.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminProvisionAndInviteEnterpriseUser201Response]
  describe 'enterprise_admin_get_provisioning_information_for_enterprise_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_self_hosted_runner_for_enterprise
  # Get a self-hosted runner for an enterprise
  # Gets a specific self-hosted runner configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [SelfHostedRunners]
  describe 'enterprise_admin_get_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_self_hosted_runner_group_for_enterprise
  # Get a self-hosted runner group for an enterprise
  # Gets a specific self-hosted runner group for an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ResponseRunnerGroupsInner]
  describe 'enterprise_admin_get_self_hosted_runner_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_get_server_statistics
  # Get GitHub Enterprise Server statistics
  # Returns aggregate usage metrics for your GitHub Enterprise Server 3.5+ instance for a specified time period up to 365 days.  To use this endpoint, your GitHub Enterprise Server instance must be connected to GitHub Enterprise Cloud using GitHub Connect. You must enable Server Statistics, and for the API request provide your enterprise account name or organization name connected to the GitHub Enterprise Server. For more information, see \&quot;[Enabling Server Statistics for your enterprise](/admin/configuration/configuring-github-connect/enabling-server-statistics-for-your-enterprise)\&quot; in the GitHub Enterprise Server documentation.  You&#39;ll need to use a personal access token:   - If you connected your GitHub Enterprise Server to an enterprise account and enabled Server Statistics, you&#39;ll need a personal access token with the &#x60;read:enterprise&#x60; permission.   - If you connected your GitHub Enterprise Server to an organization account and enabled Server Statistics, you&#39;ll need a personal access token with the &#x60;read:org&#x60; permission.  For more information on creating a personal access token, see \&quot;[Creating a personal access token](/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\&quot;
  # @param enterprise_or_org The slug version of the enterprise name or the login of an organization.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :date_start A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.
  # @option opts [String] :date_end A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.
  # @return [Array<ServerStatisticsProxyEndpointInner>]
  describe 'enterprise_admin_get_server_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_labels_for_self_hosted_runner_for_enterprise
  # List labels for a self-hosted runner for an enterprise
  # Lists all labels for a self-hosted runner configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200Response]
  describe 'enterprise_admin_list_labels_for_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_org_access_to_self_hosted_runner_group_in_enterprise
  # List organization access to a self-hosted runner group in an enterprise
  # Lists the organizations with access to a self-hosted runner group.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200Response]
  describe 'enterprise_admin_list_org_access_to_self_hosted_runner_group_in_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_provisioned_groups_enterprise
  # List provisioned SCIM groups for an enterprise
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_index Used for pagination: the index of the first result to return.
  # @option opts [Integer] :count Used for pagination: the number of results to return.
  # @option opts [String] :filter filter results
  # @option opts [String] :excluded_attributes attributes to exclude
  # @return [EnterpriseAdminListProvisionedGroupsEnterprise200Response]
  describe 'enterprise_admin_list_provisioned_groups_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_provisioned_identities_enterprise
  # List SCIM provisioned identities for an enterprise
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Retrieves a paginated list of all provisioned enterprise members, including pending invitations.  When a user with a SAML-provisioned external identity leaves (or is removed from) an enterprise, the account&#39;s metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:   - When a user with a SCIM-provisioned external identity is removed from an enterprise, the account&#39;s metadata is preserved to allow the user to re-join the organization in the future.   - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).   - When a user is invited over SCIM, an external identity is created that matches with the invitee&#39;s email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.  The returned list of external identities can include an entry for a &#x60;null&#x60; user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:  1. The user is granted access by the IdP and is not a member of the GitHub enterprise.  1. The user attempts to access the GitHub enterprise and initiates the SAML SSO process, and is not currently signed in to their GitHub account.  1. After successfully authenticating with the SAML SSO IdP, the &#x60;null&#x60; external identity entry is created and the user is prompted to sign in to their GitHub account:    - If the user signs in, their GitHub account is linked to this entry.    - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub enterprise, and the external identity &#x60;null&#x60; entry remains in place.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_index Used for pagination: the index of the first result to return.
  # @option opts [Integer] :count Used for pagination: the number of results to return.
  # @option opts [String] :filter filter results
  # @return [EnterpriseAdminListProvisionedIdentitiesEnterprise200Response]
  describe 'enterprise_admin_list_provisioned_identities_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_runner_applications_for_enterprise
  # List runner applications for an enterprise
  # Lists binaries for the runner application that you can download and run.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @return [Array<RunnerApplication>]
  describe 'enterprise_admin_list_runner_applications_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_selected_organizations_enabled_github_actions_enterprise
  # List selected organizations enabled for GitHub Actions in an enterprise
  # Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;enabled_organizations&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200Response]
  describe 'enterprise_admin_list_selected_organizations_enabled_github_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_self_hosted_runner_groups_for_enterprise
  # List self-hosted runner groups for an enterprise
  # Lists all self-hosted runner groups for an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @option opts [String] :visible_to_organization Only return runner groups that are allowed to be used by this organization.
  # @return [EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200Response]
  describe 'enterprise_admin_list_self_hosted_runner_groups_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_self_hosted_runners_for_enterprise
  # List self-hosted runners for an enterprise
  # Lists all self-hosted runners configured for an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [EnterpriseAdminListSelfHostedRunnersForEnterprise200Response]
  describe 'enterprise_admin_list_self_hosted_runners_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_list_self_hosted_runners_in_group_for_enterprise
  # List self-hosted runners in a group for an enterprise
  # Lists the self-hosted runners that are in a specific enterprise group.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @option opts [Integer] :page Page number of the results to fetch.
  # @return [EnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200Response]
  describe 'enterprise_admin_list_self_hosted_runners_in_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_provision_and_invite_enterprise_group
  # Provision a SCIM enterprise group and invite users
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Provision an enterprise group, and invite users to the group. This sends invitation emails to the email address of the invited users to join the GitHub organization that the SCIM group corresponds to.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_provision_and_invite_enterprise_group_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListProvisionedGroupsEnterprise200ResponseResourcesInner]
  describe 'enterprise_admin_provision_and_invite_enterprise_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_provision_and_invite_enterprise_user
  # Provision and invite a SCIM enterprise user
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Provision enterprise membership for a user, and send organization invitation emails to the email address.  You can optionally include the groups a user will be invited to join. If you do not provide a list of &#x60;groups&#x60;, the user is provisioned for the enterprise, but no organization invitation emails will be sent.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_provision_and_invite_enterprise_user_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminProvisionAndInviteEnterpriseUser201Response]
  describe 'enterprise_admin_provision_and_invite_enterprise_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_remove_all_custom_labels_from_self_hosted_runner_for_enterprise
  # Remove all custom labels from a self-hosted runner for an enterprise
  # Remove all custom labels from a self-hosted runner configured in an enterprise. Returns the remaining read-only labels from the runner.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200Response]
  describe 'enterprise_admin_remove_all_custom_labels_from_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_remove_custom_label_from_self_hosted_runner_for_enterprise
  # Remove a custom label from a self-hosted runner for an enterprise
  # Remove a custom label from a self-hosted runner configured in an enterprise. Returns the remaining labels from the runner.  This endpoint returns a &#x60;404 Not Found&#x60; status if the custom label is not present on the runner.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param name The name of a self-hosted runner&#39;s custom label.
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200Response]
  describe 'enterprise_admin_remove_custom_label_from_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_remove_org_access_to_self_hosted_runner_group_in_enterprise
  # Remove organization access to a self-hosted runner group in an enterprise
  # Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have &#x60;visibility&#x60; set to &#x60;selected&#x60;. For more information, see \&quot;[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param org_id The unique identifier of the organization.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_remove_org_access_to_self_hosted_runner_group_in_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_remove_self_hosted_runner_from_group_for_enterprise
  # Remove a self-hosted runner from a group for an enterprise
  # Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_remove_self_hosted_runner_from_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_allowed_actions_enterprise
  # Set allowed actions and reusable workflows for an enterprise
  # Sets the actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;allowed_actions&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_get_allowed_actions_enterprise200_response 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_set_allowed_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_custom_labels_for_self_hosted_runner_for_enterprise
  # Set custom labels for a self-hosted runner for an enterprise
  # Remove all previous custom labels and set the new custom labels for a specific self-hosted runner configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_id Unique identifier of the self-hosted runner.
  # @param enterprise_admin_set_custom_labels_for_self_hosted_runner_for_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200Response]
  describe 'enterprise_admin_set_custom_labels_for_self_hosted_runner_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_github_actions_permissions_enterprise
  # Set GitHub Actions permissions for an enterprise
  # Sets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_set_github_actions_permissions_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_set_github_actions_permissions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_information_for_provisioned_enterprise_group
  # Set SCIM information for a provisioned enterprise group
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Replaces an existing provisioned group’s information. You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don&#39;t provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_group_id Identifier generated by the GitHub SCIM endpoint.
  # @param enterprise_admin_provision_and_invite_enterprise_group_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListProvisionedGroupsEnterprise200ResponseResourcesInner]
  describe 'enterprise_admin_set_information_for_provisioned_enterprise_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_information_for_provisioned_enterprise_user
  # Set SCIM information for a provisioned enterprise user
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Replaces an existing provisioned user&#39;s information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don&#39;t provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](#update-an-attribute-for-an-enterprise-scim-user) endpoint instead.  You must at least provide the required values for the user: &#x60;userName&#x60;, &#x60;name&#x60;, and &#x60;emails&#x60;.  **Warning:** Setting &#x60;active: false&#x60; removes the user from the enterprise, deletes the external identity, and deletes the associated &#x60;{scim_user_id}&#x60;.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_user_id The unique identifier of the SCIM user.
  # @param enterprise_admin_provision_and_invite_enterprise_user_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminProvisionAndInviteEnterpriseUser201Response]
  describe 'enterprise_admin_set_information_for_provisioned_enterprise_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_org_access_to_self_hosted_runner_group_in_enterprise
  # Set organization access for a self-hosted runner group in an enterprise
  # Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param enterprise_admin_set_org_access_to_self_hosted_runner_group_in_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_set_org_access_to_self_hosted_runner_group_in_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_selected_organizations_enabled_github_actions_enterprise
  # Set selected organizations enabled for GitHub Actions in an enterprise
  # Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for &#x60;enabled_organizations&#x60; must be configured to &#x60;selected&#x60;. For more information, see \&quot;[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\&quot;  You must authenticate using an access token with the &#x60;admin:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param enterprise_admin_set_selected_organizations_enabled_github_actions_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_set_selected_organizations_enabled_github_actions_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_set_self_hosted_runners_in_group_for_enterprise
  # Set self-hosted runners in a group for an enterprise
  # Replaces the list of self-hosted runners that are part of an enterprise runner group.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param enterprise_admin_set_self_hosted_runners_in_group_for_enterprise_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enterprise_admin_set_self_hosted_runners_in_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_update_attribute_for_enterprise_group
  # Update an attribute for a SCIM enterprise group
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Allows you to change a provisioned group’s individual attributes. To change a group’s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_group_id Identifier generated by the GitHub SCIM endpoint.
  # @param enterprise_admin_update_attribute_for_enterprise_group_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminListProvisionedGroupsEnterprise200ResponseResourcesInner]
  describe 'enterprise_admin_update_attribute_for_enterprise_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_update_attribute_for_enterprise_user
  # Update an attribute for a SCIM enterprise user
  # **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.  Allows you to change a provisioned user&#39;s individual attributes. To change a user&#39;s values, you must provide a specific &#x60;Operations&#x60; JSON format that contains at least one of the &#x60;add&#x60;, &#x60;remove&#x60;, or &#x60;replace&#x60; operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).  **Note:** Complicated SCIM &#x60;path&#x60; selectors that include filters are not supported. For example, a &#x60;path&#x60; selector defined as &#x60;\&quot;path\&quot;: \&quot;emails[type eq \\\&quot;work\\\&quot;]\&quot;&#x60; will not work.  **Warning:** If you set &#x60;active:false&#x60; using the &#x60;replace&#x60; operation (as shown in the JSON example below), it removes the user from the enterprise, deletes the external identity, and deletes the associated &#x60;:scim_user_id&#x60;.  &#x60;&#x60;&#x60; {   \&quot;Operations\&quot;:[{     \&quot;op\&quot;:\&quot;replace\&quot;,     \&quot;value\&quot;:{       \&quot;active\&quot;:false     }   }] } &#x60;&#x60;&#x60;
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param scim_user_id The unique identifier of the SCIM user.
  # @param enterprise_admin_update_attribute_for_enterprise_user_request 
  # @param [Hash] opts the optional parameters
  # @return [EnterpriseAdminProvisionAndInviteEnterpriseUser201Response]
  describe 'enterprise_admin_update_attribute_for_enterprise_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enterprise_admin_update_self_hosted_runner_group_for_enterprise
  # Update a self-hosted runner group for an enterprise
  # Updates the &#x60;name&#x60; and &#x60;visibility&#x60; of a self-hosted runner group in an enterprise.  You must authenticate using an access token with the &#x60;manage_runners:enterprise&#x60; scope to use this endpoint.
  # @param enterprise The slug version of the enterprise name. You can also substitute this value with the enterprise id.
  # @param runner_group_id Unique identifier of the self-hosted runner group.
  # @param [Hash] opts the optional parameters
  # @option opts [EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseRequest] :enterprise_admin_update_self_hosted_runner_group_for_enterprise_request 
  # @return [EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ResponseRunnerGroupsInner]
  describe 'enterprise_admin_update_self_hosted_runner_group_for_enterprise test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
