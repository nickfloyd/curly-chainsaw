/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ReposUpdateBranchProtectionRequestRequiredPullRequestReviews } from './reposUpdateBranchProtectionRequestRequiredPullRequestReviews';
import { ReposUpdateBranchProtectionRequestRequiredStatusChecks } from './reposUpdateBranchProtectionRequestRequiredStatusChecks';
import { ReposUpdateBranchProtectionRequestRestrictions } from './reposUpdateBranchProtectionRequestRestrictions';

export class ReposUpdateBranchProtectionRequest {
    'requiredStatusChecks': ReposUpdateBranchProtectionRequestRequiredStatusChecks | null;
    /**
    * Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.
    */
    'enforceAdmins': boolean | null;
    'requiredPullRequestReviews': ReposUpdateBranchProtectionRequestRequiredPullRequestReviews | null;
    'restrictions': ReposUpdateBranchProtectionRequestRestrictions | null;
    /**
    * Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.
    */
    'requiredLinearHistory'?: boolean;
    /**
    * Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"
    */
    'allowForcePushes'?: boolean | null;
    /**
    * Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.
    */
    'allowDeletions'?: boolean;
    /**
    * If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Set to `true` to restrict new branch creation. Default: `false`.
    */
    'blockCreations'?: boolean;
    /**
    * Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.
    */
    'requiredConversationResolution'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "requiredStatusChecks",
            "baseName": "required_status_checks",
            "type": "ReposUpdateBranchProtectionRequestRequiredStatusChecks"
        },
        {
            "name": "enforceAdmins",
            "baseName": "enforce_admins",
            "type": "boolean"
        },
        {
            "name": "requiredPullRequestReviews",
            "baseName": "required_pull_request_reviews",
            "type": "ReposUpdateBranchProtectionRequestRequiredPullRequestReviews"
        },
        {
            "name": "restrictions",
            "baseName": "restrictions",
            "type": "ReposUpdateBranchProtectionRequestRestrictions"
        },
        {
            "name": "requiredLinearHistory",
            "baseName": "required_linear_history",
            "type": "boolean"
        },
        {
            "name": "allowForcePushes",
            "baseName": "allow_force_pushes",
            "type": "boolean"
        },
        {
            "name": "allowDeletions",
            "baseName": "allow_deletions",
            "type": "boolean"
        },
        {
            "name": "blockCreations",
            "baseName": "block_creations",
            "type": "boolean"
        },
        {
            "name": "requiredConversationResolution",
            "baseName": "required_conversation_resolution",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ReposUpdateBranchProtectionRequest.attributeTypeMap;
    }
}

