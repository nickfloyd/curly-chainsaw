/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AppPermissions } from './appPermissions';
import { Repository } from './repository';

/**
* Authentication token for a GitHub App installed on a user or org.
*/
export class InstallationToken {
    'token': string;
    'expiresAt': string;
    'permissions'?: AppPermissions;
    'repositorySelection'?: InstallationToken.RepositorySelectionEnum;
    'repositories'?: Array<Repository>;
    'singleFile'?: string;
    'hasMultipleSingleFiles'?: boolean;
    'singleFilePaths'?: Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "token",
            "baseName": "token",
            "type": "string"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "string"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "AppPermissions"
        },
        {
            "name": "repositorySelection",
            "baseName": "repository_selection",
            "type": "InstallationToken.RepositorySelectionEnum"
        },
        {
            "name": "repositories",
            "baseName": "repositories",
            "type": "Array<Repository>"
        },
        {
            "name": "singleFile",
            "baseName": "single_file",
            "type": "string"
        },
        {
            "name": "hasMultipleSingleFiles",
            "baseName": "has_multiple_single_files",
            "type": "boolean"
        },
        {
            "name": "singleFilePaths",
            "baseName": "single_file_paths",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return InstallationToken.attributeTypeMap;
    }
}

export namespace InstallationToken {
    export enum RepositorySelectionEnum {
        All = <any> 'all',
        Selected = <any> 'selected'
    }
}
