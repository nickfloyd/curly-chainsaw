/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Repository } from './repository';
import { SimpleUser } from './simpleUser';

/**
* A migration.
*/
export class Migration {
    'id': number;
    'owner': SimpleUser | null;
    'guid': string;
    'state': string;
    'lockRepositories': boolean;
    'excludeMetadata': boolean;
    'excludeGitData': boolean;
    'excludeAttachments': boolean;
    'excludeReleases': boolean;
    'excludeOwnerProjects': boolean;
    'orgMetadataOnly': boolean;
    'repositories': Array<Repository>;
    'url': string;
    'createdAt': Date;
    'updatedAt': Date;
    'nodeId': string;
    'archiveUrl'?: string;
    'exclude'?: Array<any>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "SimpleUser"
        },
        {
            "name": "guid",
            "baseName": "guid",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "lockRepositories",
            "baseName": "lock_repositories",
            "type": "boolean"
        },
        {
            "name": "excludeMetadata",
            "baseName": "exclude_metadata",
            "type": "boolean"
        },
        {
            "name": "excludeGitData",
            "baseName": "exclude_git_data",
            "type": "boolean"
        },
        {
            "name": "excludeAttachments",
            "baseName": "exclude_attachments",
            "type": "boolean"
        },
        {
            "name": "excludeReleases",
            "baseName": "exclude_releases",
            "type": "boolean"
        },
        {
            "name": "excludeOwnerProjects",
            "baseName": "exclude_owner_projects",
            "type": "boolean"
        },
        {
            "name": "orgMetadataOnly",
            "baseName": "org_metadata_only",
            "type": "boolean"
        },
        {
            "name": "repositories",
            "baseName": "repositories",
            "type": "Array<Repository>"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "nodeId",
            "baseName": "node_id",
            "type": "string"
        },
        {
            "name": "archiveUrl",
            "baseName": "archive_url",
            "type": "string"
        },
        {
            "name": "exclude",
            "baseName": "exclude",
            "type": "Array<any>"
        }    ];

    static getAttributeTypeMap() {
        return Migration.attributeTypeMap;
    }
}

