/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ChecksCreateRequestOutputAnnotationsInner {
    /**
    * The path of the file to add an annotation to. For example, `assets/css/main.css`.
    */
    'path': string;
    /**
    * The start line of the annotation.
    */
    'startLine': number;
    /**
    * The end line of the annotation.
    */
    'endLine': number;
    /**
    * The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.
    */
    'startColumn'?: number;
    /**
    * The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.
    */
    'endColumn'?: number;
    /**
    * The level of the annotation.
    */
    'annotationLevel': ChecksCreateRequestOutputAnnotationsInner.AnnotationLevelEnum;
    /**
    * A short description of the feedback for these lines of code. The maximum size is 64 KB.
    */
    'message': string;
    /**
    * The title that represents the annotation. The maximum size is 255 characters.
    */
    'title'?: string;
    /**
    * Details about this annotation. The maximum size is 64 KB.
    */
    'rawDetails'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "string"
        },
        {
            "name": "startLine",
            "baseName": "start_line",
            "type": "number"
        },
        {
            "name": "endLine",
            "baseName": "end_line",
            "type": "number"
        },
        {
            "name": "startColumn",
            "baseName": "start_column",
            "type": "number"
        },
        {
            "name": "endColumn",
            "baseName": "end_column",
            "type": "number"
        },
        {
            "name": "annotationLevel",
            "baseName": "annotation_level",
            "type": "ChecksCreateRequestOutputAnnotationsInner.AnnotationLevelEnum"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "rawDetails",
            "baseName": "raw_details",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ChecksCreateRequestOutputAnnotationsInner.attributeTypeMap;
    }
}

export namespace ChecksCreateRequestOutputAnnotationsInner {
    export enum AnnotationLevelEnum {
        Notice = <any> 'notice',
        Warning = <any> 'warning',
        Failure = <any> 'failure'
    }
}
