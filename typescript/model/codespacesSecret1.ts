/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Secrets for a GitHub Codespace.
*/
export class CodespacesSecret1 {
    /**
    * The name of the secret
    */
    'name': string;
    /**
    * The date and time at which the secret was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
    */
    'createdAt': Date;
    /**
    * The date and time at which the secret was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
    */
    'updatedAt': Date;
    /**
    * The type of repositories in the organization that the secret is visible to
    */
    'visibility': CodespacesSecret1.VisibilityEnum;
    /**
    * The API URL at which the list of repositories this secret is visible to can be retrieved
    */
    'selectedRepositoriesUrl': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "CodespacesSecret1.VisibilityEnum"
        },
        {
            "name": "selectedRepositoriesUrl",
            "baseName": "selected_repositories_url",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CodespacesSecret1.attributeTypeMap;
    }
}

export namespace CodespacesSecret1 {
    export enum VisibilityEnum {
        All = <any> 'all',
        Private = <any> 'private',
        Selected = <any> 'selected'
    }
}
