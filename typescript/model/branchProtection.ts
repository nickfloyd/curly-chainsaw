/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BranchProtectionRequiredLinearHistory } from './branchProtectionRequiredLinearHistory';
import { BranchProtectionRequiredSignatures } from './branchProtectionRequiredSignatures';
import { BranchRestrictionPolicy } from './branchRestrictionPolicy';
import { ProtectedBranchAdminEnforced } from './protectedBranchAdminEnforced';
import { ProtectedBranchPullRequestReview } from './protectedBranchPullRequestReview';
import { ProtectedBranchRequiredStatusCheck } from './protectedBranchRequiredStatusCheck';

/**
* Branch Protection
*/
export class BranchProtection {
    'url'?: string;
    'enabled'?: boolean;
    'requiredStatusChecks'?: ProtectedBranchRequiredStatusCheck;
    'enforceAdmins'?: ProtectedBranchAdminEnforced;
    'requiredPullRequestReviews'?: ProtectedBranchPullRequestReview;
    'restrictions'?: BranchRestrictionPolicy;
    'requiredLinearHistory'?: BranchProtectionRequiredLinearHistory;
    'allowForcePushes'?: BranchProtectionRequiredLinearHistory;
    'allowDeletions'?: BranchProtectionRequiredLinearHistory;
    'blockCreations'?: BranchProtectionRequiredLinearHistory;
    'requiredConversationResolution'?: BranchProtectionRequiredLinearHistory;
    'name'?: string;
    'protectionUrl'?: string;
    'requiredSignatures'?: BranchProtectionRequiredSignatures;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "requiredStatusChecks",
            "baseName": "required_status_checks",
            "type": "ProtectedBranchRequiredStatusCheck"
        },
        {
            "name": "enforceAdmins",
            "baseName": "enforce_admins",
            "type": "ProtectedBranchAdminEnforced"
        },
        {
            "name": "requiredPullRequestReviews",
            "baseName": "required_pull_request_reviews",
            "type": "ProtectedBranchPullRequestReview"
        },
        {
            "name": "restrictions",
            "baseName": "restrictions",
            "type": "BranchRestrictionPolicy"
        },
        {
            "name": "requiredLinearHistory",
            "baseName": "required_linear_history",
            "type": "BranchProtectionRequiredLinearHistory"
        },
        {
            "name": "allowForcePushes",
            "baseName": "allow_force_pushes",
            "type": "BranchProtectionRequiredLinearHistory"
        },
        {
            "name": "allowDeletions",
            "baseName": "allow_deletions",
            "type": "BranchProtectionRequiredLinearHistory"
        },
        {
            "name": "blockCreations",
            "baseName": "block_creations",
            "type": "BranchProtectionRequiredLinearHistory"
        },
        {
            "name": "requiredConversationResolution",
            "baseName": "required_conversation_resolution",
            "type": "BranchProtectionRequiredLinearHistory"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "protectionUrl",
            "baseName": "protection_url",
            "type": "string"
        },
        {
            "name": "requiredSignatures",
            "baseName": "required_signatures",
            "type": "BranchProtectionRequiredSignatures"
        }    ];

    static getAttributeTypeMap() {
        return BranchProtection.attributeTypeMap;
    }
}

