/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Repository } from './repository';

/**
* Authentication Token
*/
export class AuthenticationToken {
    /**
    * The token used for authentication
    */
    'token': string;
    /**
    * The time this token expires
    */
    'expiresAt': Date;
    'permissions'?: object;
    /**
    * The repositories this token has access to
    */
    'repositories'?: Array<Repository>;
    'singleFile'?: string | null;
    /**
    * Describe whether all repositories have been selected or there\'s a selection involved
    */
    'repositorySelection'?: AuthenticationToken.RepositorySelectionEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "token",
            "baseName": "token",
            "type": "string"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "Date"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "object"
        },
        {
            "name": "repositories",
            "baseName": "repositories",
            "type": "Array<Repository>"
        },
        {
            "name": "singleFile",
            "baseName": "single_file",
            "type": "string"
        },
        {
            "name": "repositorySelection",
            "baseName": "repository_selection",
            "type": "AuthenticationToken.RepositorySelectionEnum"
        }    ];

    static getAttributeTypeMap() {
        return AuthenticationToken.attributeTypeMap;
    }
}

export namespace AuthenticationToken {
    export enum RepositorySelectionEnum {
        All = <any> 'all',
        Selected = <any> 'selected'
    }
}
