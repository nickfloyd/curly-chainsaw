/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AppPermissions } from './appPermissions';
import { InstallationAccount } from './installationAccount';
import { SimpleUser } from './simpleUser';

/**
* Installation
*/
export class Installation {
    /**
    * The ID of the installation.
    */
    'id': number;
    'account': InstallationAccount | null;
    /**
    * Describe whether all repositories have been selected or there\'s a selection involved
    */
    'repositorySelection': Installation.RepositorySelectionEnum;
    'accessTokensUrl': string;
    'repositoriesUrl': string;
    'htmlUrl': string;
    'appId': number;
    /**
    * The ID of the user or organization this token is being scoped to.
    */
    'targetId': number;
    'targetType': string;
    'permissions': AppPermissions;
    'events': Array<string>;
    'createdAt': Date;
    'updatedAt': Date;
    'singleFileName': string | null;
    'hasMultipleSingleFiles'?: boolean;
    'singleFilePaths'?: Array<string>;
    'appSlug': string;
    'suspendedBy': SimpleUser | null;
    'suspendedAt': Date | null;
    'contactEmail'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "account",
            "baseName": "account",
            "type": "InstallationAccount"
        },
        {
            "name": "repositorySelection",
            "baseName": "repository_selection",
            "type": "Installation.RepositorySelectionEnum"
        },
        {
            "name": "accessTokensUrl",
            "baseName": "access_tokens_url",
            "type": "string"
        },
        {
            "name": "repositoriesUrl",
            "baseName": "repositories_url",
            "type": "string"
        },
        {
            "name": "htmlUrl",
            "baseName": "html_url",
            "type": "string"
        },
        {
            "name": "appId",
            "baseName": "app_id",
            "type": "number"
        },
        {
            "name": "targetId",
            "baseName": "target_id",
            "type": "number"
        },
        {
            "name": "targetType",
            "baseName": "target_type",
            "type": "string"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "AppPermissions"
        },
        {
            "name": "events",
            "baseName": "events",
            "type": "Array<string>"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "singleFileName",
            "baseName": "single_file_name",
            "type": "string"
        },
        {
            "name": "hasMultipleSingleFiles",
            "baseName": "has_multiple_single_files",
            "type": "boolean"
        },
        {
            "name": "singleFilePaths",
            "baseName": "single_file_paths",
            "type": "Array<string>"
        },
        {
            "name": "appSlug",
            "baseName": "app_slug",
            "type": "string"
        },
        {
            "name": "suspendedBy",
            "baseName": "suspended_by",
            "type": "SimpleUser"
        },
        {
            "name": "suspendedAt",
            "baseName": "suspended_at",
            "type": "Date"
        },
        {
            "name": "contactEmail",
            "baseName": "contact_email",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Installation.attributeTypeMap;
    }
}

export namespace Installation {
    export enum RepositorySelectionEnum {
        All = <any> 'all',
        Selected = <any> 'selected'
    }
}
