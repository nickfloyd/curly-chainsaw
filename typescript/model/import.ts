/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ImportProjectChoicesInner } from './importProjectChoicesInner';

/**
* A repository import from an external source.
*/
export class Import {
    'vcs': string | null;
    'useLfs'?: boolean;
    /**
    * The URL of the originating repository.
    */
    'vcsUrl': string;
    'svcRoot'?: string;
    'tfvcProject'?: string;
    'status': Import.StatusEnum;
    'statusText'?: string | null;
    'failedStep'?: string | null;
    'errorMessage'?: string | null;
    'importPercent'?: number | null;
    'commitCount'?: number | null;
    'pushPercent'?: number | null;
    'hasLargeFiles'?: boolean;
    'largeFilesSize'?: number;
    'largeFilesCount'?: number;
    'projectChoices'?: Array<ImportProjectChoicesInner>;
    'message'?: string;
    'authorsCount'?: number | null;
    'url': string;
    'htmlUrl': string;
    'authorsUrl': string;
    'repositoryUrl': string;
    'svnRoot'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "vcs",
            "baseName": "vcs",
            "type": "string"
        },
        {
            "name": "useLfs",
            "baseName": "use_lfs",
            "type": "boolean"
        },
        {
            "name": "vcsUrl",
            "baseName": "vcs_url",
            "type": "string"
        },
        {
            "name": "svcRoot",
            "baseName": "svc_root",
            "type": "string"
        },
        {
            "name": "tfvcProject",
            "baseName": "tfvc_project",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Import.StatusEnum"
        },
        {
            "name": "statusText",
            "baseName": "status_text",
            "type": "string"
        },
        {
            "name": "failedStep",
            "baseName": "failed_step",
            "type": "string"
        },
        {
            "name": "errorMessage",
            "baseName": "error_message",
            "type": "string"
        },
        {
            "name": "importPercent",
            "baseName": "import_percent",
            "type": "number"
        },
        {
            "name": "commitCount",
            "baseName": "commit_count",
            "type": "number"
        },
        {
            "name": "pushPercent",
            "baseName": "push_percent",
            "type": "number"
        },
        {
            "name": "hasLargeFiles",
            "baseName": "has_large_files",
            "type": "boolean"
        },
        {
            "name": "largeFilesSize",
            "baseName": "large_files_size",
            "type": "number"
        },
        {
            "name": "largeFilesCount",
            "baseName": "large_files_count",
            "type": "number"
        },
        {
            "name": "projectChoices",
            "baseName": "project_choices",
            "type": "Array<ImportProjectChoicesInner>"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "authorsCount",
            "baseName": "authors_count",
            "type": "number"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "htmlUrl",
            "baseName": "html_url",
            "type": "string"
        },
        {
            "name": "authorsUrl",
            "baseName": "authors_url",
            "type": "string"
        },
        {
            "name": "repositoryUrl",
            "baseName": "repository_url",
            "type": "string"
        },
        {
            "name": "svnRoot",
            "baseName": "svn_root",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Import.attributeTypeMap;
    }
}

export namespace Import {
    export enum StatusEnum {
        Auth = <any> 'auth',
        Error = <any> 'error',
        None = <any> 'none',
        Detecting = <any> 'detecting',
        Choose = <any> 'choose',
        AuthFailed = <any> 'auth_failed',
        Importing = <any> 'importing',
        Mapping = <any> 'mapping',
        WaitingToPush = <any> 'waiting_to_push',
        Pushing = <any> 'pushing',
        Complete = <any> 'complete',
        Setup = <any> 'setup',
        Unknown = <any> 'unknown',
        DetectionFoundMultiple = <any> 'detection_found_multiple',
        DetectionFoundNothing = <any> 'detection_found_nothing',
        DetectionNeedsAuth = <any> 'detection_needs_auth'
    }
}
