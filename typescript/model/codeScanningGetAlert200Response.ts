/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CodeScanningListAlertsForEnterprise200ResponseInnerMostRecentInstance } from './codeScanningListAlertsForEnterprise200ResponseInnerMostRecentInstance';
import { CodeScanningListAlertsForEnterprise200ResponseInnerRule } from './codeScanningListAlertsForEnterprise200ResponseInnerRule';
import { CodeScanningListAlertsForEnterprise200ResponseInnerTool } from './codeScanningListAlertsForEnterprise200ResponseInnerTool';
import { SimpleUser } from './simpleUser';

export class CodeScanningGetAlert200Response {
    /**
    * The security alert number.
    */
    'number': number;
    /**
    * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'createdAt': Date;
    /**
    * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'updatedAt'?: Date;
    /**
    * The REST API URL of the alert resource.
    */
    'url': string;
    /**
    * The GitHub URL of the alert resource.
    */
    'htmlUrl': string;
    /**
    * The REST API URL for fetching the list of instances for an alert.
    */
    'instancesUrl': string;
    /**
    * State of a code scanning alert.
    */
    'state': CodeScanningGetAlert200Response.StateEnum;
    /**
    * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'fixedAt'?: Date | null;
    'dismissedBy': SimpleUser | null;
    /**
    * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'dismissedAt': Date | null;
    /**
    * **Required when the state is dismissed.** The reason for dismissing or closing the alert.
    */
    'dismissedReason': CodeScanningGetAlert200Response.DismissedReasonEnum;
    /**
    * The dismissal comment associated with the dismissal of the alert.
    */
    'dismissedComment'?: string | null;
    'rule': CodeScanningListAlertsForEnterprise200ResponseInnerRule;
    'tool': CodeScanningListAlertsForEnterprise200ResponseInnerTool;
    'mostRecentInstance': CodeScanningListAlertsForEnterprise200ResponseInnerMostRecentInstance;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "number",
            "baseName": "number",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "htmlUrl",
            "baseName": "html_url",
            "type": "string"
        },
        {
            "name": "instancesUrl",
            "baseName": "instances_url",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "CodeScanningGetAlert200Response.StateEnum"
        },
        {
            "name": "fixedAt",
            "baseName": "fixed_at",
            "type": "Date"
        },
        {
            "name": "dismissedBy",
            "baseName": "dismissed_by",
            "type": "SimpleUser"
        },
        {
            "name": "dismissedAt",
            "baseName": "dismissed_at",
            "type": "Date"
        },
        {
            "name": "dismissedReason",
            "baseName": "dismissed_reason",
            "type": "CodeScanningGetAlert200Response.DismissedReasonEnum"
        },
        {
            "name": "dismissedComment",
            "baseName": "dismissed_comment",
            "type": "string"
        },
        {
            "name": "rule",
            "baseName": "rule",
            "type": "CodeScanningListAlertsForEnterprise200ResponseInnerRule"
        },
        {
            "name": "tool",
            "baseName": "tool",
            "type": "CodeScanningListAlertsForEnterprise200ResponseInnerTool"
        },
        {
            "name": "mostRecentInstance",
            "baseName": "most_recent_instance",
            "type": "CodeScanningListAlertsForEnterprise200ResponseInnerMostRecentInstance"
        }    ];

    static getAttributeTypeMap() {
        return CodeScanningGetAlert200Response.attributeTypeMap;
    }
}

export namespace CodeScanningGetAlert200Response {
    export enum StateEnum {
        Open = <any> 'open',
        Closed = <any> 'closed',
        Dismissed = <any> 'dismissed',
        Fixed = <any> 'fixed'
    }
    export enum DismissedReasonEnum {
        Null = <any> 'null',
        FalsePositive = <any> 'false positive',
        WontFix = <any> 'won\'t fix',
        UsedInTests = <any> 'used in tests'
    }
}
