/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ChecksCreateRequestActionsInner } from './checksCreateRequestActionsInner';
import { ChecksCreateRequestOneOf1 } from './checksCreateRequestOneOf1';
import { ChecksUpdateRequestAnyOf } from './checksUpdateRequestAnyOf';
import { ChecksUpdateRequestOutput } from './checksUpdateRequestOutput';

export class ChecksUpdateRequest {
    /**
    * The name of the check. For example, \"code-coverage\".
    */
    'name'?: string;
    /**
    * The URL of the integrator\'s site that has the full details of the check.
    */
    'detailsUrl'?: string;
    /**
    * A reference for the run on the integrator\'s system.
    */
    'externalId'?: string;
    /**
    * This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'startedAt'?: Date;
    /**
    * The current status.
    */
    'status'?: ChecksUpdateRequest.StatusEnum;
    /**
    * **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.
    */
    'conclusion'?: ChecksUpdateRequest.ConclusionEnum;
    /**
    * The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
    */
    'completedAt'?: Date;
    'output'?: ChecksUpdateRequestOutput;
    /**
    * Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\"
    */
    'actions'?: Array<ChecksCreateRequestActionsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "detailsUrl",
            "baseName": "details_url",
            "type": "string"
        },
        {
            "name": "externalId",
            "baseName": "external_id",
            "type": "string"
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ChecksUpdateRequest.StatusEnum"
        },
        {
            "name": "conclusion",
            "baseName": "conclusion",
            "type": "ChecksUpdateRequest.ConclusionEnum"
        },
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "Date"
        },
        {
            "name": "output",
            "baseName": "output",
            "type": "ChecksUpdateRequestOutput"
        },
        {
            "name": "actions",
            "baseName": "actions",
            "type": "Array<ChecksCreateRequestActionsInner>"
        }    ];

    static getAttributeTypeMap() {
        return ChecksUpdateRequest.attributeTypeMap;
    }
}

export namespace ChecksUpdateRequest {
    export enum StatusEnum {
        Queued = <any> 'queued',
        InProgress = <any> 'in_progress',
        Completed = <any> 'completed'
    }
    export enum ConclusionEnum {
        ActionRequired = <any> 'action_required',
        Cancelled = <any> 'cancelled',
        Failure = <any> 'failure',
        Neutral = <any> 'neutral',
        Success = <any> 'success',
        Skipped = <any> 'skipped',
        Stale = <any> 'stale',
        TimedOut = <any> 'timed_out'
    }
}
