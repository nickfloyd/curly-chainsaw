/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Metadata } from './metadata';

/**
* A single package dependency.
*/
export class SnapshotManifestsValueResolvedValue {
    /**
    * Package-url (PURL) of dependency. See https://github.com/package-url/purl-spec for more details.
    */
    'packageUrl'?: string;
    /**
    * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
    */
    'metadata'?: { [key: string]: Metadata; };
    /**
    * A notation of whether a dependency is requested directly by this manifest or is a dependency of another dependency.
    */
    'relationship'?: SnapshotManifestsValueResolvedValue.RelationshipEnum;
    /**
    * A notation of whether the dependency is required for the primary build artifact (runtime) or is only used for development. Future versions of this specification may allow for more granular scopes.
    */
    'scope'?: SnapshotManifestsValueResolvedValue.ScopeEnum;
    /**
    * Array of package-url (PURLs) of direct child dependencies.
    */
    'dependencies'?: Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "packageUrl",
            "baseName": "package_url",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: Metadata; }"
        },
        {
            "name": "relationship",
            "baseName": "relationship",
            "type": "SnapshotManifestsValueResolvedValue.RelationshipEnum"
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "SnapshotManifestsValueResolvedValue.ScopeEnum"
        },
        {
            "name": "dependencies",
            "baseName": "dependencies",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return SnapshotManifestsValueResolvedValue.attributeTypeMap;
    }
}

export namespace SnapshotManifestsValueResolvedValue {
    export enum RelationshipEnum {
        Direct = <any> 'direct',
        Indirect = <any> 'indirect'
    }
    export enum ScopeEnum {
        Runtime = <any> 'runtime',
        Development = <any> 'development'
    }
}
