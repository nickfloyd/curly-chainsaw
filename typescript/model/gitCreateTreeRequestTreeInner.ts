/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class GitCreateTreeRequestTreeInner {
    /**
    * The file referenced in the tree.
    */
    'path'?: string;
    /**
    * The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.
    */
    'mode'?: GitCreateTreeRequestTreeInner.ModeEnum;
    /**
    * Either `blob`, `tree`, or `commit`.
    */
    'type'?: GitCreateTreeRequestTreeInner.TypeEnum;
    /**
    * The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.      **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.
    */
    'sha'?: string | null;
    /**
    * The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.      **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.
    */
    'content'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "string"
        },
        {
            "name": "mode",
            "baseName": "mode",
            "type": "GitCreateTreeRequestTreeInner.ModeEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "GitCreateTreeRequestTreeInner.TypeEnum"
        },
        {
            "name": "sha",
            "baseName": "sha",
            "type": "string"
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GitCreateTreeRequestTreeInner.attributeTypeMap;
    }
}

export namespace GitCreateTreeRequestTreeInner {
    export enum ModeEnum {
        _100644 = <any> '100644',
        _100755 = <any> '100755',
        _040000 = <any> '040000',
        _160000 = <any> '160000',
        _120000 = <any> '120000'
    }
    export enum TypeEnum {
        Blob = <any> 'blob',
        Tree = <any> 'tree',
        Commit = <any> 'commit'
    }
}
